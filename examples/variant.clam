variant Maybe(T)
{
    | So is val: T,
    | No,
    ;
}

variant Stmt
{
    | Assign is lvalue: string, rvalue: Expr,
    | Decl is type: Type, id: string,
    | Function is funcName: string, retType: Type, argList: [](Type, string),
        statements: []Stmt,
    | Return is retVal: Expr,
    | IfStmt is boolExpr: Expr, statements: []Stmt, elseifblocks: []ElseifBlock,
        elseblock: Maybe!(Elseblock),
    | WhileStmt is boolExpr: Expr, statements: []Stmt,
    ;
}
